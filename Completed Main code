//Kyle Applegarth
//Ryan Zheng
//Ronald Icely
//Adam Veilleaux

#include <LiquidCrystal.h>
#include <Stepper.h>
#include <RTClib.h>
//Complete the Real time Clock
//Does Github work at all

//Create Serial Registers
volatile unsigned char *myUCSR0A = (unsigned char *)0x00C0;
volatile unsigned char *myUCSR0B = (unsigned char *)0x00C1;
volatile unsigned char *myUCSR0C = (unsigned char *)0x00C2;
volatile unsigned int  *myUBRR0  = (unsigned int *) 0x00C4;
volatile unsigned char *myUDR0   = (unsigned char *)0x00C6;

//Create the Analog Read stuff
volatile unsigned char* my_ADMUX = (unsigned char*) 0x7C;
volatile unsigned char* my_ADCSRB = (unsigned char*) 0x7B;
volatile unsigned char* my_ADCSRA = (unsigned char*) 0x7A;
volatile unsigned int* my_ADC_DATA = (unsigned int*) 0x78;

//Timer Variables
volatile unsigned char *myTCCR1A = (unsigned char*) 0x80;
volatile unsigned char *myTCCR1B = (unsigned char*) 0x81;
volatile unsigned char *myTCCR1C = (unsigned char*) 0x82;
volatile unsigned char *myTIMSK1 = (unsigned char*) 0x6F;
volatile unsigned int  *myTCNT1  = (unsigned  int*) 0x84;
volatile unsigned char *myTIFR1 =  (unsigned char*) 0x36;

//water sensor
volatile unsigned char *portC =  (unsigned char*) 0x28;
volatile unsigned char *ddrC =  (unsigned char*) 0x27;
//start and stop buttons
volatile unsigned char *portD =  (unsigned char*) 0x2B;
volatile unsigned char *ddrD =  (unsigned char*) 0x2A;
//reset button
volatile unsigned char *portE =  (unsigned char*) 0x2E;
volatile unsigned char *ddrE =  (unsigned char*) 0x2D;

//Add the LED register
#include "LEDs.h"
//RTC
RTC_DS3231 rtc;
char daysOfTheWeek[7][12] = {"Sunday", "Monday", "Tuesday", "Wednesday", "Thursday","Friday", "Saturday"};
// LCD pins <--> Arduino pins
const int RS = 12, EN = 11, D4 = 5, D5 = 4, D6 = 2, D7 = 8;
LiquidCrystal lcd(RS, EN, D4, D5, D6, D7);
#include <dht.h> //install the DHTLib library
dht DHT;
#define DHT11_PIN 7
#define TEMP_THRESHOLD 25
#define VENT_LOWER_THRESHOLD 200
#define VENT_UPPER_THRESHOLD 900
#define WATER_SIGNAL 1
#define WATER_POWER 36
#define WATER_THRESHOLD 100
#define TBE 0x20
#define RDA 0x80
int printErrorOnce = 0;
//Create Stepper Motor
const int stepsPerRevolution = 2038;
//pin 32 IN1, Pin 34 IN2, IN3 33, Pin 35 IN4
Stepper myStepper = Stepper(stepsPerRevolution, 32,33,34,35);
//Create ISR for Start and Stop button and Reset
//Declare Variables
volatile char state;//d is for disabled, r for running, i for idle, and e for error
char previousState;//d is for disabled, r for running, i for idle, and e for error
double waterLevel = 0;
//Set UP DC Motor
#include "FanMotor.h"
unsigned long previousMillis = 0;
const long interval = 60000;
unsigned long currentMillis = 0;
